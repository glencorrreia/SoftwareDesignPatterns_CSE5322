@startuml EUC3DesignSequenceDiagramIteration3

skinparam linetype ortho
'skinparam backgroundColor transparent
'skinparam handwritten true
'skinparam monochrome true
'left to right direction
skinparam sequenceMessageAlign direction
hide empty members
hide empty description
skinparam classAttributeIconSize 0
skinparam style strictuml
autoactivate on

actor "Event Organizer" as User
participant ":EventProposalUI" as EventProposalUI
participant ":EventProposalController" as EventProposalController
participant ":DBMgr" as DBMgr
participant ":DBAccess" as DBAccess
participant ":DBEvent" as DBEvent

User --> EventProposalUI : <<selects "Create Event Proposal" button>>
EventProposalUI --> User : Displays event proposal form
User --> EventProposalUI : <<submits proposal with slogan,\n\ttheme, venue, duration\n\tto the event organizer.>>
EventProposalUI -> EventProposalController : msg := saveEventProposal(\n\tslogan: String,\n\ttheme: String,\n\tvenue: String,\n\tduration: String): String
EventProposalController -> DBMgr : res := saveEventProposal(\n\tslogan: String,\n\ttheme: String,\n\tvenue: String,\n\tduration: String): boolean
DBMgr -> DBAccess : res := saveEventProposal(\n\tslogan: String,\n\ttheme: String,\n\tvenue: String,\n\tduration: String): boolean
DBAccess -> DBEvent : res := saveEventProposal(\n\tslogan: String,\n\ttheme: String,\n\tvenue: String,\n\tduration: String): boolean
EventProposalUI --> User : Display "Pending Review and Payment Invoice"

@enduml